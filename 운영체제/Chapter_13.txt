Contiguous logical address space
    • Types:
        Data
            • Numeric, character, binary
        Program
            • Contents defined by file’s creator
        Many types
            • Consider text file, source file, executable file

file attributes

    Information about files are kept in the directory structure, which is maintained on the disk

file operations

    • Write 3 at write pointer location
    • Read 3 at read pointer location
    • Reposition within file - seek

Open files

Several pieces of data are needed to manage open files:
     Open-file table: tracks open files

     File pointer: pointer to last read/write location, per process that has the file open

     File-open count: counter of number of times a file is open to allow removal of data 
     from open-file table when last processes closes it

Open File Locking

Provided by some operating systems and file systems
     Similar to reader-writer locks
     Shared lock similar to reader lock 3 several processes can acquire concurrently
     Exclusive lock similar to writer lock

Mandatory or advisory:
     Mandatory(의무적) 3 access is denied depending on locks held and requested
    (OS ensures locking integrity)
     Advisory(권고적) 3 processes can find status of locks and decide what to do
    (up to software developer)

Access Methods

Sequential Access
    read next (read the next portion & advance a file pointer)
    write next (appends to the end and advance a file pointer)
    reset
• Direct Access 3 file is fixed length logical records
    read n (block number n)
    write n
    position to n
        read next
        write next
    rewrite n
n = relative block number
• Relative block numbers allow OS to decide where file should be placed

Other Access Methods
    Can be built on top of base methods
    • Generally, involve creation of an index for the file
    • Keep index in memory for fast determination of location of data to
    be operated on (consider UPC code plus record of data about that
    item)
    • If too large, index (in memory) of the index (on disk)

Directory Structure

    모든 파일에 대한 정보를 포함하는 노드 모음

Operations Performed on Directory

    • Search for a file
    • Create a file
    • Delete a file
    • List a directory
    • Rename a file
    • Traverse the file system

Directory Organization

    • The directory is organized logically to obtain

    • Efficiency 3 locating a file quickly

    • Naming 3 convenient to users
        두 사용자가 서로 다른 파일에 같은 이름을 사용할 수 있음
        동일한 파일에 여러 개의 다른 이름을 가질 수 있음

Single-Level Directory

    A single directory for all users

    Naming problem

    • Grouping problem

Two-Level Directory

    Separate directory for each user (User File Directory)

    Path name(경로), Can have the same file name for different user, Efficient searching, No grouping capability

Tree-Structured Directories

    Efficient searching

    • Grouping Capability(hierarchical structure)

    • Current directory (working directory)
    3 cd /spell/mail/prog

    Absolute (begins at the root) or relative (from the current directory) path name
        • Creating a new file is done in current directory
        • Delete a file
            rm <file-name>
        • Creating a new subdirectory is done in current directory
            mkdir <dir-name>
        Example: if in current directory /mail
            mkdir count

Acyclic-Graph Directories

    Graph with no cycles
    • Have shared subdirectories and files
        In two or more places

    New directory entry type
        Link - another name (pointer) to an existing file
            기존 파일에 대한 다른 이름 ( 포인터 )
        
        Resolve the link 3 follow pointer to locate the file
            포인터를 따라 파일을 찾음

General Graph Directory

    • How do we guarantee no cycles? 
        Cycles cause problems when traversing file system

     Allow only links to file not subdirectories
     Garbage collection
     Every time a new link is added, use a cycle detection algorithm to determine whether it is OK

Protection

File owner/creator should be able to control:
     what can be done by whom

    • Types of access
         Read: read from the file
         Write: write or rewrite the file
         Execute: Load the file into memory and execute it
         Append: Write new information at the end of the file
         Delete: Delete the file and free its space for possible reuse
         List: List the name and attributes of the file
         Attribute change: Changing the attributes of the file

Access Lists and Groups

    Mode of access: read, write, execute