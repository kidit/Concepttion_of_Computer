1. 하드디스크
    
    3. 다중 영역 기록 (MZR) 방식

        1. 같은 영역에 속한 트랙들의 저장 밀도는 동일함

        2. 디스크 전체적으로 저장 밀도를 거의 같도록 조정 -> 바깥쪽 트랙에 더 많은 섹터 분할 -> 더 많은 데이터 저장 가능

        장점 : 디스크 전체 용량 증가

        단점
            
            1. 트랙 위치에 따라 회전속도 변경 -> 제어 회로 더 복잡

            2. 영역에 따라 읽기 및 쓰기 시간에 미세한 차이 발생
    
    4. CRC
        
        1. 디스크 -> 데이터 읽기, 통신 과정에서 나온오류 검출 -> 순환 2진 부호 사용

        2. 송신 : 데이터 -> 블록 단위 나눔 -> 각 블록마다 2진 다항식의 특수 계산 적용 -> 순환 부호를 얻어 여분으로 붙여 저장 -> 송신

        3. 수신 : 송신과 동일하게 계산 -> 전송 오류 유무 검사

        4. 패리티 비트 이용보다 정교함 -> CRC는 오류 검출 능력이 뛰어남

        5. 저장 장치 및 각종 통신 프로토콜에서 사용

        6. 과정

            1. 송신

                1. 1 0 0 1 1 0 (정보 비트) -> (1 0 0 1 1 0)(0 0 0) (N개의 0비트추가)

                2. (1 0 0 1 1 0)(0 0 0) / (1 1 0 1) = (1 0 0 1 0) ... (1 0 1)

                3. (1 0 0 1 1 0) + (1 0 1) -> (1 0 0 1 1 0)(1 0 1)
            
            2. 수신

                1. 1 0 0 1 1 0 (1 0 1) -> (1 0 0 1 1 0)(1 0 1) / (1 1 0 1) = (0 0 0)

                2. N자리 0비트가 나올 떄 = 정상 수신
    
    5. 디스크 액세스 시간

        1. 디스크 액세스 동작 순서

            1. 헤드 -> 해당 트랙 이동

            2. 원하는 섹터 -> 헤드 아래로 회전할 때 까지 대기

            3. 데이터 전송

        2. 디스크 엑세스 시간

            1. 시간 = 탐색 시간 + 회전 지연 시간 + 데이터 전송 시간

                1. 탐색 시간 : 1번에 걸리는 시간

                2. 회전 지연 시간 : 2번에 걸리는 시간

                    1. 회전 속도에 따라 결정됨

                        회전 축의 속도 = 7200 rpm 인 경우 -> 초당 120회 회전

                            1.회전 지연 시간 = 0 ~ 8.33ms

                            2.평균 회전 지연 = 4.16ms (1/2 바퀴 회전에 걸리는 시간)
                    
                    2. 디스크 회전축 속도 : 5400 rpm, 7200 rpm 주로 사용

                        1. 10000 rpm 이상의 구동 장치가 개발되었으나 냉각의 어려움으로 사용 제한

                3. 데이터 전송 시간 : 3번 -> 걸리는 시간 및 디스크 제어기에서 소요된 시간

    6. RAID

        장점

            1. 저렴한 가격으로 더 큰 용량을가진 디스크 서브 시스템 구성 가능

            2. 데이터 분산 저장에 의한 동시 엑세스 가능

            3. 병렬 데이터 채널에 의한 데이터 전송 속도 향상

        단점

            1. 결함 발생 증가 (MTTF 단축)

                MTTF = (단일 디스크의 MTTF) / (배열 내 디스크들의 수)

                ex : MTTF = 30000 시간인 디스크 100개를 이용한 디스크 배열 MTTF = 30000 / 100 = 300 시간으로 단축

        1. 디스크 인터리빙

            1. 데이터 블록들을 여러 개의 디스크들로 이루어진 디스크 배열에 분산 저장하는 기술

            2. 균등 분산 저장 -> 라운드 로빈 (RR) 방식 사용
        
        2. RAID 제안

            1. 핵심 기술 : 검사 디스크 이용 -> 오류 검출 및 복구 기능 추가

            2. 디스크 결함 발생 시 복구 절차

                1. 해당 디스크 사용 중단 및 시스템으로부터 분리

                2. 검사 디스크에 저장된 정보를 이용하여 원래 데이터 복구

                3. 결함 수리 후 디스크 재설치

                4. 시스템 재구성 -> 원래의 디스크 용량 회복
        
        3. 종류

            1. RAID - 1
                
                1. 디스크 미러링 : 데이터 디스크 -> 저장된 모든 데이터 -> 미러 디스크의 같은 위치에 복사

                    장점 : 완전한 결함허용도 제공

                    단점 : 가격이 높음

            2. RAID - 2

                1. 비트 - 단위 인터리빙 : 데이터 -> 각 디스크에 비트 단위로 분산

                2. 해밍 코드 이용 -> 오류 검출 및 정정

                    단점 : 필요한 검사 디스크들의 수가 많아 가격이 비쌈
                
                3. 필요한 검사 디스크 수 구하는 식

                    2^C -1 >= G + C

                    (단, G= 데이터 디스크 수, C : 필요한 검사 디스크들 수)

                    ex : G = 8, 검사 디스크 수(C) = 4, 오버헤드 = 50%
            
            3. RAID - 3

                1. 패리티 방식을 이용한 오류 검출 및 정정 방식 사용

                    패리티 비트 : p = b1 exclusive or b2 exclusive or b3 exclusive or b4
                
                2. 디스크에 결함이 발생한 경우의 데이터 복구 방법

                    b2에 문제가 있다고 가정 -> b2 = p exclusive or b1 exclusive or b3 exclusive or b4

                    장점 : 병렬 데이터 읽기 / 쓰기 가능 -> 디스크 액세스 속도 향상

                    단점 : 쓰기 동작 떄마다 패리티 비트 갱신 필요 -> 시간 지연 발생

            4.RAID - 4

                1. 블록 - 단위 인터리빙 방식 사용

                2. 데이터 디스크들의 동일한 위치에 있는 블록 -> (패리티 블록 -> 패리티 디스크 저장)

                3. 데이터 블록의 쓰기 과정

                    1. 두 번째 디스크에 저장된 블록 B2를 B2'으로 갱신하는 경우

                    2. 새로운 패리티 블록 P' = B1 exclusive or B2' exclusive or B3 exclusive or b4

                        1. 세 번의 디스크 읽기 와 두 번의 디스크 쓰기 동작 필요 -> 성능 저하

                        2. 디스크 액세스 횟수의 최소화 방법

                            P' = B1 exclusive or B2' exclusive or B3 exclusive or B4 exclusive or (B2 exclusive or B2)

                            -> p exclusive or B2 exclusive or B2'
                        
                            즉, 디스크 수에 상관없이 한 블록 갱신에 네 번의 디스크 액세스만 필요

                                1. 원래 데이터 읽기

                                2. 원래 패리티 읽기

                                3. 새로우 패리티 갱신

                                    3- 1. 새로운 데이터 쓰기

                                    3- 2. 새로운 패리티 쓰기
            
            5. RAID - 5

                1. RAID - 4의 문제점을 보완하기 위해 패리티 블록들을 라운드 로빈 (RR) 방식으로 분산 저장

                    장점
                        
                        1. 패리티 디스크에 대한 병목 현상 해소

                        2. 쓰기 동작들의 병렬 수행 가능

                        3. 데이터 디스크들의 수가 G -> 최대 (G + 1) / 2 개의 쓰기 동작들의 병렬 수행 가능
                    
                    단점

                        1. 작은 쓰기 문제 존재

                            1. 어느 한 블록만 갱신하는 '작은 쓰기'의 경우에 네 번의 디스크 액세스가 필요 -> 성능 저장하는

                2. RAID - 1과 RAID - 5의 비교

                    1. RAID - 1 : 읽기와 작은 쓰기가 많은 환경에 적합

                    2. RAID - 5 : 용량과 비용을 중요시하는 응용이나 큰 쓰기 요구가 많은 환경에 적합

                    3. 가격 대 성능비 측면 -> RAID 5가 더 우수함
    
    7. 플래시 메모리, SSD

        1. 특징

            1. 주기억장치와 보조저장장치 간의 속도 격차 증가 -> 보조저장장치의 성능 향상 필요

            2. 기계장치가 포함된 디스크 드라이브의 성능 한계

            3. 플래시 메모리

                1. 비휘발성 반도체 기억장치 분야 활성화

                    1. 높은 저장 밀도
                    
                    2. 한 개의 트랜지스터만 사용 -> 한 비트 저장

                    3. 낮은 전력소모량

                    4. 높은 신뢰성

                    5. 속도 향상

                2. 동작 원리

                    1. 메모리 셀 구현 : NMOS 트랜지스터 사용

                    2. 구조적 특징 : 두 개의 게이트 사용 (단, 일반 NMOS는 한 개)

                        1. 제어 게이트 : 일반 트랜지스터의 게이트와 동일함
                        
                        2. 부동 게이트 : 정보 저장의 핵심적 역할 수행 -> 초기에는 비어있는 상태 ( 1 저장 상태)
                    
                    3. 프로그래밍 (쓰기) 동작

                        1. 터널링 효과로 인한 터널 주입 현상 발생 -> '0' 쓰기

                            1. '0' 저장 : v_0 = +12v 인가

                            2. '1' 저장 : v_0 = 0 (전자 이동 없음 : 부동 게이트 상태 유지)
                        
                    4. 삭제 동작 : N층에 고전압 인가 -> 부동 게이트에 갇힌 전자 -> N - 채널로 빠져 나옴 (터널 릴리스 현상)

                        1. 셀에 저장된 값 -> 원래 값 ('1')로 저장
                
                    5. 읽기 동작

                        1. 드레인 전압 인가 -> N-채널을 통하여 전자 흐름 발생

                        2. 게이트 전압 인가 -> 전기장 발생

                        3. 저장된 데이터 = '1'

                            1. N - 채널 확장

                            2. 많은 전류가 흘러 트랜지스터가 'ON' 상태 : '1' 읽음
                        
                        4. 저장된 데이터 = '0' (부동 게이트가 채워진 상태)

                            1. N - 채널 유지 : 부동 게이트 내의 전자들이 전기장 차단함

                            2. 매우 적은 전류가 흘러 트랜지스터는 'OFF' 상태 : '0' 읽음
                    
                    6. 배열 조직

                        1. NOR형 플래시 메모리

                            1. 메모리 셀 배열이 NMOS 트랜지스터들의 병렬 접속으로 구성함

                                1. 각 트랜지스터의 독립적 스위칭 동작 가능 (셀 단위 액세스 가능)
                            
                            2. 동작 원리 ->  "NOR 연산"

                                1. 셀 단위 읽기 가능

                                2. NOR 형

                                    1. 셀 당 접속 선의 수 = 3개 -> 낮은 저장 밀도

                                    2. 주요 용도 : PC - BIOS 저장 장치, PDA / 스마트폰 OS 저장 장치
                        
                        2. NAND형 플래시 메모리

                            1. 메모리 셀 배열 -> NMOS 트랜지스터들의 직렬 접속으로 구성

                                1. 트랜지스터의 독립적 스위칭 동작 불가능 (셀 단위 엑세스 불가능)
                            
                            2. 동작 원리 -> "NAND 연산"

                                1. 센서 증폭기에 의해 최종 출력은 반전됨

                                2. NAND 형

                                    1. 셀 단위 읽기 / 쓰기 불가능

                                    2. 셀 당 접속 선의 수 = 1개(WL선)

                                    3. 주요 용도 : 백업 저장장치

                                    4. 조직 특징

                                        1. 블록들로 구성

                                        2. 각 블록은 다수의 페이지들로 구성

                                        3. 읽기, 쓰기 및 전송 : 페이지 단위

                                        4. 삭제 : 블록 단위

                                        5. 예시

                                            1. 1G bit 플래시 메모리 내부

                                                1. 페이지 : x 방향 : 2048 셀 구성, z 방향으로 8개 -> 16K bit

                                                2. 블록 : 64개의 페이지 구성 -> 1M bit (128K byte)

                                                3. 메모리 모듈 : 1024개 블록 -> y 방향으로 쌓여 이루어짐

                                                    1. 전체 용량 : 1G bit (128M byte)

                                                4. 읽기 동작

                                                    1. 페이지 딘위로 읽기 수행
                                                    
                                                    2. 바이트 단위 동작이 가능한 NOR 형에 비해 읽기 시간이 더 길어짐

                                                5. 특징

                                                    1. 액세스 및 전송의 기본 단위인 페이지의 크기가 일정하지 않음

                                                    2. 하드 디스크의 섹터 크기와 다름
                                                    
                                                    3. 삭제 -> 블록 단위로만 가능 

                5. SLC, MLC, TLC

                    1. SLC : 두 가지 상태를 가짐으로서 한 비트를 저장하는 셀

                    2. MLC : 셀의 상태를 4가지 (00, 01, 10, 11)로 구분

                        1. 메모리 셀 당 2비트씩 저장

                    3. TLC : 셀의 상태를 8가지 (000 ~ 111)로 구분

                        1. 셀 당 3비트씩 저장

                    4. MLC, TLC의 문제점

                        1. 전자 수 조정을 위한 세밀한 작업 필요

                        2. 데이터 구분의 어려움으로 인한 액세스 속도 저하

                        3. 오류 발생 빈도 증가
                        
                        4. 수명 단축
            4. SSD

                장점 : 높은 안정성 및 신뢰도

                결점 : 저장용량 대비 가격이 HDD에 비해 다소 높음

                5. 플래시 메모리 배열

                    1. PCB 앞면과 뒷면에 각각 4개의 64층 QLC 플래시 칩 장착

                    2. 인터리빙 방식 -> 데이터 분산 저장, 병렬 입출력 채널 구성

                        1. 동시 액세스 및 병렬 데이터 전송 지원

                6. SSD 제어기

                    1. 데이터 저장, 인출, 칩 관리, 주소 변환 -> 핵심적 기능 수행

                    2. 미들웨어인 FTL 프로그램을 수행하는 프로세서로 구현

                        1. FTL의 기능

                            1. 마모 평준화

                                1. 필요성

                                    1. 플래시 메모리 셀 수명 한계

                                    2. MLC 및 TLC에서 그 문제는 더욱 심각함

                                    3. 삭제 및 쓰기 동작들이 일부 블록, 페이지들에 집중 -> 전체 SSD 수명 단축

                                2. 해결책 : 마모 평준화
                                    
                                    1. 모든 페이지 -> 고르게 사용 -> 저장 위치 조정

                                    2. 각 페이지의 사용 횟수 -> 페이지 레지스터에 기록 -> 쓰기 동작 시 참고

                                    3. 기록 횟수가 적은 페이지 우선 사용

                            2. 쓰레기 수집

                                1. 필요성

                                    1. 삭제 동작이 블록 단위로만 가능

                                    2. 페이지 수정 시 다른 위치에 새로운 페이지 작성

                                    3. 원래 페이지는 삭제 필요

                                2. 해결책

                                    1. 페이지 내용 수정 -> 삭제되지 못한 원래 페이지는 쓰레기로 표시

                                    2. 쓰레기 페이지 -> 축적 -> 축적된 블록을 한 번에 삭제 : 쓰레기 수집

                                        1. 삭제 전에 유효 페이지는 미리 다른 블록으로 이동
                                    
                                    3. TRIM 명령

                                        1. OS가 수행하는 명령 -> SSD에게 무효 페이지들을 SSD 제어기에게 통보

                                        2. 쓰레기 수집의 효율성 높임 -> SSD 성능 향상시켜줌

                                        3. 삭제 횟수를 최소화 시켜주는 효과도 있음

                            3. 초과 대비공간

                                1. 필요성

                                    1. 미모 평준화 및 쓰레기 수집 효율
                                    
                                    2. 수정된 페이지 + 원래 페이지
                                    
                                    3. 일시적 중복 저장 목적 -> 여유 저장 공간 필요

                                2. 해결책

                                    1. SSD 내부에 여분의 저장 공간 제공

                7. DRAM : 컴퓨터와 플래시 메모리 사이의 데이터 버퍼

                8. 외부 인터페이스 : SATA, PCle -> 직렬 전송

